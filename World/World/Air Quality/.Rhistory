df$Date <- as.Date(df$Date, format = "%b %d, %Y")
#df <- subset(df, select = c(Date, TotalConfirmedDeaths, DailyNewConfirmedDeaths))
head(df)
library(ggplot2)
library(plotly)
library(dplyr)
df2 <- df[df$Entity == 'World', ]
df2
fig2 <- plot_ly(df2, x = ~Date, y = ~TotalConfirmedDeaths, type = 'scatter',
fig2 <- plot_ly(df2, x = ~Date, y = ~TotalConfirmedDeaths, type = 'scatter',
mode = 'lines+markers')
fig2 <- plot_ly(df2, x = ~Date, y = ~TotalConfirmedDeaths, type = 'scatter',
mode = 'lines+markers')
df2 <- df[df$Entity == 'World', ]
df2
fig2 <- plot_ly(df2, x = ~Date, y = ~TotalConfirmedDeaths, type = 'scatter',
mode = 'lines+markers')
fig2 <- fig2 %>%
add_trace(y = ~DailyNewConfirmedDeaths, type = 'scatter',
mode = 'lines+markers')
fig2 <- fig2 %>%
layout(hovermode = 'compare',
title = 'Daily and total deaths worldwide')
fig2
df3 <- df2 %>%
mutate(TotalConfirmedDeathsChange = c(NA, -diff(TotalConfirmedDeaths) / TotalConfirmedDeaths[-1] * 100))
TotalChangeInDeaths <- df3%>%
select(Date, TotalConfirmedDeaths, TotalConfirmedDeathsChange)
TotalChangeInDeaths
df3 <- df2 %>%
df3 <- df2 %>%
mutate(DailyConfirmedDeathsChange = c(NA, -diff(DailyNewConfirmedDeaths) / DailyNewConfirmedDeaths[-1] * 100))
df3 <- df2 %>%
mutate(DailyConfirmedDeathsChange = c(NA, -diff(DailyNewConfirmedDeaths) / DailyNewConfirmedDeaths[-1] * 100))
DailyChangeInDeaths <- df3%>%
select(Date, DailyNewConfirmedDeaths, DailyConfirmedDeathsChange)
DailyChangeInDeaths
library(flextable)
library(officer)
ft <- flextable(tail(TotalChangeInDeaths, 15))
ft <- autofit(ft)
print(ft, preview = "pptx")
ft2 <- flextable(tail(DailyChangeInDeaths, 15))
ft <- autofit(ft2)
print(ft2, preview = "pptx")
df4 <- df[df$Entity == 'India', ]
df4
fig4 <- plot_ly(df4, x = ~Date, y = ~TotalConfirmedDeaths, type = 'scatter',
mode = 'lines+markers')
fig4 <- fig4 %>%
add_trace(y = ~DailyNewConfirmedDeaths, type = 'scatter',
mode = 'lines+markers')
fi4 <- fig4 %>%
layout(title = 'Daily and total deaths(India)', hovermode = 'compare')
fig4
df5 <- df4 %>%
mutate(TotalConfirmedDeathsChangeIndia = c(NA, -diff(TotalConfirmedDeaths) / TotalConfirmedDeaths[-1] * 100))
TotalChangeInDeathsIndia <- df5%>%
select(Date, TotalConfirmedDeaths, TotalConfirmedDeathsChangeIndia)
TotalChangeInDeathsIndia
ft3 <- flextable(tail(TotalChangeInDeathsIndia, 15))
ft3 <- autofit(ft3)
print(ft3, preview = "pptx")
df5 <- df4 %>%
df5 <- df4 %>%
mutate(DailyConfirmedDeathsChangeIndia = c(NA, -diff(DailyNewConfirmedDeaths) / DailyNewConfirmedDeaths[-1] * 100))
df5 <- df4 %>%
mutate(DailyConfirmedDeathsChangeIndia = c(NA, -diff(DailyNewConfirmedDeaths) / DailyNewConfirmedDeaths[-1] * 100))
DailyChangeInDeathsIndia <- df5%>%
select(Date, DailyNewConfirmedDeaths, DailyConfirmedDeathsChangeIndia)
DailyChangeInDeathsIndia
print(ft, preview = "pptx")
df <- read.csv("G:\\Required\\College\\8th sem\\Major Project\\COVID\\World-20200428T111157Z-001\\World\\Air Quality\\waqi-covid19-airqualitydata-2020.csv")
head(df)
library(ggplot2)
theme_set(theme_minimal())
library(plotly)
library(dplyr)
library(gghighlight)
library(scales)
df$Date <- as.Date(df$Date, format = "%d-%m-%Y")
df_ind_pm25 <- filter(df, Country == 'IN' & Specie == 'pm25')
df_ind_pm25 <- filter(df_ind_pm25, City == 'Delhi' | City == 'Bengaluru' | City == 'Mumbai' | City == 'Kolkata' | City == 'Chennai')
fig2 <- ggplot(df_ind_pm25, aes(x = Date, y = median)) + geom_line(aes(color = City)) +  scale_x_date(labels = date_format("%Y-%m-%d"), date_breaks = '2 day') + theme(axis.text.x = element_text(angle = 90, hjust = 1))
pm25 <- ggplotly(fig2)
pm25 <- pm25 %>%  layout(title = "pm25 levels in Indian Metropolitan cities")
pm25
day1 <- df_ind_pm25[df_ind_pm25$Date == "2020-03-25",]
lastDay <- df_ind_pm25[df_ind_pm25$Date == '2020-04-10', ]
day <- rbind(day1, lastDay)
day <- day %>% group_by(City) %>%  arrange(City, .by_group = TRUE) %>%
mutate(pct_change = (lag(median) - median)/median * 100)
pct_change_pm25 <- day%>%
select(Date, City, median, pct_change)
pct_change_pm25[complete.cases(pct_change_pm25),]
library(flextable)
library(officer)
ft <- flextable(pct_change_pm25[complete.cases(pct_change_pm25),])
ft <- autofit(ft)
print(ft, preview = "pptx")
df_ind_co <- filter(df, Country == 'IN' & Specie == 'co')
df_ind_co <- filter(df_ind_co, City == 'Delhi' | City == 'Bengaluru' |
City == 'Mumbai' | City == 'Kolkata' | City == 'Chennai')
fig3 <- ggplot(df_ind_co, aes(x = Date, y = median)) +
geom_line(aes(color = City)) +
scale_x_date(labels = date_format("%Y-%m-%d"), date_breaks = '1 day') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
co <- ggplotly(fig3)
co <- co %>%
co <- co %>%
layout(title = "CO levels in Indian Metropolitan Cities")
co <- co %>%
layout(title = "CO levels in Indian Metropolitan Cities")
co
day1 <- df_ind_co[df_ind_co$Date == "2020-03-25",]
lastDay <- df_ind_co[df_ind_co$Date == '2020-04-10', ]
day <- rbind(day1, lastDay)
day <- day %>%
group_by(City) %>%
arrange(City, .by_group = TRUE) %>%
mutate(pct_change = (lag(median) - median)/median * 100)
pct_change_co <- day%>%
select(Date, City, median, pct_change)
pct_change_co[complete.cases(pct_change_co),]
ft2 <- flextable(pct_change_co[complete.cases(pct_change_co),])
ft2 <- autofit(ft2)
print(ft2, preview = "pptx")
df_ind_pm10 <- filter(df, Country == 'IN' & Specie == 'pm10')
df_ind_pm10 <- filter(df_ind_pm10, City == 'Delhi' | City == 'Bengaluru' |
City == 'Mumbai' | City == 'Kolkata' | City == 'Chennai')
fig4 <- ggplot(df_ind_pm10, aes(x = Date, y = median)) +
geom_line(aes(color = City)) +
scale_x_date(labels = date_format("%Y-%m-%d"), date_breaks = '1 day') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
pm10 <- ggplotly(fig4)
pm10 <- pm10 %>%
layout(title = "pm10 levels in Indian Metropolitan Cities")
pm10
day1 <- df_ind_pm10[df_ind_pm10$Date == "2020-03-25",]
lastDay <- df_ind_pm10[df_ind_pm10$Date == '2020-04-10', ]
day <- rbind(day1, lastDay)
day <- day %>%
group_by(City) %>%
arrange(City, .by_group = TRUE) %>%
mutate(pct_change = (lag(median) - median)/median * 100)
pct_change_pm10 <- day%>%
select(Date, City, median, pct_change)
pct_change_pm10[complete.cases(pct_change_pm10),]
ft3 <- flextable(pct_change_pm10[complete.cases(pct_change_pm10),])
ft3 <- autofit(ft3)
print(ft3, preview = "pptx")
df_ind_o3 <- filter(df, Country == 'IN' & Specie == 'o3')
df_ind_o3 <- filter(df_ind_o3, City == 'Delhi' | City == 'Bengaluru' |
City == 'Mumbai' | City == 'Kolkata' | City == 'Chennai')
fig5 <- ggplot(df_ind_o3, aes(x = Date, y = median)) +
geom_line(aes(color = City)) +
scale_x_date(labels = date_format("%Y-%m-%d"), date_breaks = '1 day') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
o3 <- ggplotly(fig5)
o3 <- o3 %>%
layout(title = "o3 levels in Indian Metropolitan Cities")
o3
####Percentage Change in vlaues of o3######
day1 <- df_ind_o3[df_ind_o3$Date == "2020-03-25",]
lastDay <- df_ind_o3[df_ind_o3$Date == '2020-04-10', ]
day <- rbind(day1, lastDay)
day <- day %>%
group_by(City) %>%
arrange(City, .by_group = TRUE) %>%
mutate(pct_change = (lag(median) - median)/median * 100)
pct_change_o3 <- day%>%
select(Date, City, median, pct_change)
pct_change_o3[complete.cases(pct_change_o3),]
ft4 <- flextable(pct_change_o3[complete.cases(pct_change_o3),])
ft4 <- autofit(ft4)
print(ft4, preview = "pptx")
df_ind_no2 <- filter(df, Country == 'IN' & Specie == 'no2')
df_ind_no2 <- filter(df_ind_no2, City == 'Delhi' | City == 'Bengaluru' |
City == 'Mumbai' | City == 'Kolkata' | City == 'Chennai')
fig6 <- ggplot(df_ind_no2, aes(x = Date, y = median)) +
geom_line(aes(color = City)) +
scale_x_date(labels = date_format("%Y-%m-%d"), date_breaks = '1 day') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
no2 <- ggplotly(fig6)
no2 <- no2 %>%
layout(title = "no2 levels in Indian Metropolitan Cities")
no2
####Percentage Change in vlaues of no2######
day1 <- df_ind_no2[df_ind_no2$Date == "2020-03-25",]
lastDay <- df_ind_no2[df_ind_no2$Date == '2020-04-10', ]
day <- rbind(day1, lastDay)
day <- day %>%
group_by(City) %>%
arrange(City, .by_group = TRUE) %>%
mutate(pct_change = (lag(median) - median)/median * 100)
pct_change_no2 <- day%>%
select(Date, City, median, pct_change)
pct_change_no2[complete.cases(pct_change_no2),]
ft5 <- flextable(pct_change_no2[complete.cases(pct_change_no2),])
ft5 <- autofit(ft5)
print(ft5, preview = "pptx")
df_ind_so2 <- filter(df, Country == 'IN' & Specie == 'so2')
df_ind_so2 <- filter(df_ind_so2, City == 'Delhi' | City == 'Bengaluru' |
City == 'Mumbai' | City == 'Kolkata' | City == 'Chennai')
fig7 <- ggplot(df_ind_so2, aes(x = Date, y = median)) +
geom_line(aes(color = City)) +
scale_x_date(labels = date_format("%Y-%m-%d"), date_breaks = '1 day') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
so2 <- ggplotly(fig7)
so2 <- so2 %>%
layout(title = "so2 levels in Indian Metropolitan Cities")
so2
####Percentage Change in vlaues of so2######
day1 <- df_ind_so2[df_ind_so2$Date == "2020-03-25",]
lastDay <- df_ind_so2[df_ind_so2$Date == '2020-04-10', ]
day <- rbind(day1, lastDay)
day <- day %>%
group_by(City) %>%
arrange(City, .by_group = TRUE) %>%
mutate(pct_change = (lag(median) - median)/median * 100)
pct_change_so2 <- day%>%
select(Date, City, median, pct_change)
pct_change_so2[complete.cases(pct_change_so2),]
ft6 <- flextable(pct_change_so2[complete.cases(pct_change_so2),])
ft6 <- autofit(ft6)
print(ft6, preview = "pptx")
df <- read.csv('G:\\Required\\College\\8th sem\\Major Project\\COVID\\World-20200428T111157Z-001\\World\\total-daily-covid-deaths.csv')
df$Date <- as.Date(df$Date, format = "%b %d, %Y")
#df <- subset(df, select = c(Date, TotalConfirmedDeaths, DailyNewConfirmedDeaths))
head(df)
library(ggplot2)
library(plotly)
library(dplyr)
df2 <- df[df$Entity == 'World', ]
df2
fig2 <- plot_ly(df2, x = ~Date, y = ~TotalConfirmedDeaths, type = 'scatter',
mode = 'lines+markers')
fig2 <- fig2 %>%
add_trace(y = ~DailyNewConfirmedDeaths, type = 'scatter',
mode = 'lines+markers')
fig2 <- fig2 %>%
layout(hovermode = 'compare',
title = 'Daily and total deaths worldwide')
fig2
#####Total Percentage change in deaths in the World######
df3 <- df2 %>%
mutate(TotalConfirmedDeathsChange = c(NA, -diff(TotalConfirmedDeaths) / TotalConfirmedDeaths[-1] * 100))
TotalChangeInDeaths <- df3%>%
select(Date, TotalConfirmedDeaths, TotalConfirmedDeathsChange)
TotalChangeInDeaths
#####Daily Percentage change in deaths in the World######
df3 <- df2 %>%
mutate(DailyConfirmedDeathsChange = c(NA, -diff(DailyNewConfirmedDeaths) / DailyNewConfirmedDeaths[-1] * 100))
DailyChangeInDeaths <- df3%>%
select(Date, DailyNewConfirmedDeaths, DailyConfirmedDeathsChange)
DailyChangeInDeaths
library(flextable)
library(officer)
ft <- flextable(tail(TotalChangeInDeaths, 15))
ft <- autofit(ft)
print(ft, preview = "pptx")
ft2 <- flextable(tail(DailyChangeInDeaths, 15))
ft2 <- autofit(ft2)
print(ft2, preview = "pptx")
df4 <- df[df$Entity == 'India', ]
df4
fig4 <- plot_ly(df4, x = ~Date, y = ~TotalConfirmedDeaths, type = 'scatter',
mode = 'lines+markers')
fig4 <- fig4 %>%
add_trace(y = ~DailyNewConfirmedDeaths, type = 'scatter',
mode = 'lines+markers')
fi4 <- fig4 %>%
layout(title = 'Daily and total deaths(India)', hovermode = 'compare')
fig4
df5 <- df4 %>%
mutate(TotalConfirmedDeathsChangeIndia = c(NA, -diff(TotalConfirmedDeaths) / TotalConfirmedDeaths[-1] * 100))
TotalChangeInDeathsIndia <- df5%>%
select(Date, TotalConfirmedDeaths, TotalConfirmedDeathsChangeIndia)
TotalChangeInDeathsIndia
ft3 <- flextable(tail(TotalChangeInDeathsIndia, 15))
ft3 <- autofit(ft3)
print(ft3, preview = "pptx")
print(ft3, preview = "pptx")
df5 <- df4 %>%
mutate(DailyConfirmedDeathsChangeIndia = c(NA, -diff(DailyNewConfirmedDeaths) / DailyNewConfirmedDeaths[-1] * 100))
DailyChangeInDeathsIndia <- df5%>%
select(Date, DailyNewConfirmedDeaths, DailyConfirmedDeathsChangeIndia)
DailyChangeInDeathsIndia
ft4 <- flextable(tail(DailyChangeInDeathsIndia, 15))
ft4 <- autofit(ft4)
print(ft3, preview = "pptx")
install.packages("gganimate")
df <- read.csv('G:\\Required\\College\\8th sem\\Major Project\\COVID\\World-20200428T111157Z-001\\World\\full-list-cumulative-total-tests-per-million.csv')
library(RColorBrewer)
library(flextable)
library(officer)
nb.cols <- 42
mycolors <- colorRampPalette(brewer.pal(8, "Set2"))(nb.cols)
head(df)
df$Date <- as.Date(df$Date, format = "%b %d, %Y")
#df <- subset(df, select = c(Entity, Date, Cumulative.total.tests.per.thousand))
library(plotly)
fig1 <- plot_ly(df, x = ~Date, y = ~Cumulative.total.tests.per.thousand,
type = 'scatter', mode = 'lines+markers', color = ~Entity)
library(dplyr)
fig1 <- fig1 %>% layout(title = "Number of tests per thousand people", margin = margin,
autosize = TRUE,
showlegend = TRUE,
annotations = df$Entity)
fig1
df_sorted <- df[order(df$Cumulative.total.tests.per.thousand, decreasing = TRUE),]
#df_sorted
df_sorted <- df_sorted[1:54,]
fig2 <- plot_ly(df_sorted, x = ~Date, y = ~Cumulative.total.tests.per.thousand,
type = 'scatter', mode = 'lines+markers', color = ~Entity)
fig2 <- fig2 %>%
layout(hovermode = 'compare',
title = "Top 5 countries with maximum tests per thousand people")
fig2
df_ind <- filter(df, Code == 'USA' | Code == 'FRA' | Code == 'DEU' | Code == 'ITA' |
Code == 'IND')
head(df_ind)
fig3 <- plot_ly(df_ind, x = ~Date, y = ~Cumulative.total.tests.per.thousand,
type = 'scatter', mode = 'lines+markers', color = ~Entity)
fig3 <- fig3 %>%
layout(hovermode = 'compare',
title = 'Top 5 countries with maximum cases & their number of tests per thousand people')
fig3
confirmed_cases <- read.csv('D:\\Vishal\\IV Year\\Major Project\\COVID-19\\World\\total-and-daily-cases-covid-19.csv')
confirmed_cases$Date <- as.Date(confirmed_cases$Date, format = "%b %d, %Y")
head(confirmed_cases)
TopConfirmedCases <- filter(confirmed_cases, Code == 'USA' | Code == 'FRA' | Code == 'DEU' | Code == 'ITA' |
Code == 'IND' | Code == 'ESP' | Code == 'CHN')
#Total Confirmed Cases
fig5 <- plot_ly(TopConfirmedCases, x = ~Date, y = ~TotalConfirmedCases,
type = 'scatter', mode = 'lines+markers', color = ~Code)
fig5 <- fig5 %>%
layout(hovermode = 'compare',
title = "Top 6 countries with India: total number of cases")
fig5
fig6 <- plot_ly(TopConfirmedCases, x = ~Date, y = ~DailyNewConfirmedCases,
type = 'scatter', mode = 'lines+markers', color = ~Code)
fig6 <- fig6 %>%
layout(hovermode = 'compare',
title = 'Daily confirmed cases in top 6 countries')
fig6
IndianDailyCases <- filter(confirmed_cases, Code == 'IND')
IndianDailyCases <- filter(confirmed_cases, Code == 'IND')
confirmed_cases <- read.csv('D:\\Vishal\\IV Year\\Major Project\\COVID-19\\World\\total-and-daily-cases-covid-19.csv')
confirmed_cases <- read.csv('G:\\Required\\College\\8th sem\\Major Project\\COVID\\World-20200428T111157Z-001\\World\\total-and-daily-cases-covid-19.csv')
confirmed_cases$Date <- as.Date(confirmed_cases$Date, format = "%b %d, %Y")
head(confirmed_cases)
TopConfirmedCases <- filter(confirmed_cases, Code == 'USA' | Code == 'FRA' | Code == 'DEU' | Code == 'ITA' |
Code == 'IND' | Code == 'ESP' | Code == 'CHN')
#Total Confirmed Cases
fig5 <- plot_ly(TopConfirmedCases, x = ~Date, y = ~TotalConfirmedCases,
type = 'scatter', mode = 'lines+markers', color = ~Code)
fig5 <- fig5 %>%
layout(hovermode = 'compare',
title = "Top 6 countries with India: total number of cases")
fig5
confirmed_cases <- read.csv('G:\\Required\\College\\8th sem\\Major Project\\COVID\\World-20200428T111157Z-001\\World\\total-and-daily-cases-covid-19.csv')
confirmed_cases$Date <- as.Date(confirmed_cases$Date, format = "%b %d, %Y")
head(confirmed_cases)
TopConfirmedCases <- filter(confirmed_cases, Code == 'USA' | Code == 'FRA' | Code == 'DEU' | Code == 'ITA' |
Code == 'IND' | Code == 'ESP' | Code == 'CHN')
fig5 <- plot_ly(TopConfirmedCases, x = ~Date, y = ~TotalConfirmedCases,
type = 'scatter', mode = 'lines+markers', color = ~Code)
fig5 <- fig5 %>%
layout(hovermode = 'compare',
title = "Top 6 countries with India: total number of cases")
fig5
fig5 <- plot_ly(TopConfirmedCases, x = ~Date, y = ~TopConfirmedCases$Total.confirmed.cases..cases.,
type = 'scatter', mode = 'lines+markers', color = ~Code)
fig5 <- fig5 %>%
layout(hovermode = 'compare',
title = "Top 6 countries with India: total number of cases")
fig5
##Daily COnfirmed Cases
fig6 <- plot_ly(TopConfirmedCases, x = ~Date, y = ~DailyNewConfirmedCases,
type = 'scatter', mode = 'lines+markers', color = ~Code)
fig6 <- fig6 %>%
layout(hovermode = 'compare',
title = 'Daily confirmed cases in top 6 countries')
fig6
fig6 <- plot_ly(TopConfirmedCases, x = ~Date, y = ~TopConfirmedCases$Daily.new.confirmed.cases..cases.,
type = 'scatter', mode = 'lines+markers', color = ~Code)
fig6 <- fig6 %>%
layout(hovermode = 'compare',
title = 'Daily confirmed cases in top 6 countries')
fig6
IndianDailyCases <- filter(confirmed_cases, Code == 'IND')
fig_ind <- plot_ly(IndianDailyCases, x = ~Date, y = ~DailyNewConfirmedCases,
type = 'scatter', mode = 'lines+markers')
fig_ind <- plot_ly(IndianDailyCases, x = ~Date, y = ~IndianDailyCases$Daily.new.confirmed.cases..cases.,
type = 'scatter', mode = 'lines+markers')
fig_ind <- fig_ind %>%
layout(hovermode = 'compare',
title = 'Daily and total confirmed cases in India')
fig_ind <- fig_ind %>%
add_trace(y = ~TotalConfirmedCases)
fig_ind
fig_ind <- fig_ind %>%
add_trace(y = ~IndianDailyCases$Total.confirmed.cases..cases.)
fig_ind
IndianDailyCases <- filter(confirmed_cases, Code == 'IND')
fig_ind <- plot_ly(IndianDailyCases, x = ~Date, y = ~IndianDailyCases$Daily.new.confirmed.cases..cases.,
type = 'scatter', mode = 'lines+markers')
fig_ind <- fig_ind %>%
layout(hovermode = 'compare',
title = 'Daily and total confirmed cases in India')
fig_ind <- fig_ind %>%
add_trace(y = ~IndianDailyCases$Total.confirmed.cases..cases.)
fig_ind
library(gganimate)
p <- ggplot(IndianDailyCases, aes(Date, TotalConfirmedCases, color = Code)) +
geom_line() +
geom_point() +
transition_reveal(Date)
p
p <- ggplot(IndianDailyCases, aes(Date, IndianDailyCases$Total.confirmed.cases..cases., color = Code)) +
geom_line() +
geom_point() +
transition_reveal(Date)
p
head(df)
head(confirmed_cases)
length(df$Date)
length(confirmed_cases$Date)
CasesTest <- merge(df, confirmed_cases, by.x = c('Entity', 'Code', 'Date'))
head(CasesTest)
#Comparison between Daily Tests and Daily Confirmed Cases
fig7 <- plot_ly(CasesTest, x = ~Date, y = ~Cumulative.total.tests.per.thousand,
type = 'scatter', mode = 'lines+markers', color = ~Code)
fig7 <- fig7 %>%
add_trace(y = ~DailyNewConfirmedCases, type = 'scatter', mode = 'lines+markers',
color = ~Entity)
fig7 <- layout(fig7, yaxis = list(type = "log"))
fig7
fig7 <- fig7 %>%
add_trace(y = ~confirmed_cases$Daily.new.confirmed.cases..cases., type = 'scatter', mode = 'lines+markers',
color = ~Entity)
fig7 <- layout(fig7, yaxis = list(type = "log"))
fig7
fig7 <- plot_ly(CasesTest, x = ~Date, y = ~Cumulative.total.tests.per.thousand,
type = 'scatter', mode = 'lines+markers', color = ~Code)
fig7 <- fig7 %>%
add_trace(y = ~CasesTest$Daily.new.confirmed.cases..cases., type = 'scatter', mode = 'lines+markers',
color = ~Entity)
fig7 <- layout(fig7, yaxis = list(type = "log"))
fig7
print("Correlation between Total Number of cases and The Daily Tests: " +
cor(CasesTest$Cumulative.total.tests.per.thousand, CasesTestGrp$TotalConfirmedCases))
IndiaConfirmedCases <- filter(confirmed_cases, Code == 'IND')
IndiaConfirmedCases <- IndiaConfirmedCases %>%
mutate(TotalPercentIncrease = c(NA, -diff(TotalConfirmedCases) / TotalConfirmedCases[-1] * 100))
IndiaConfirmedCases <- filter(confirmed_cases, Code == 'IND')
IndiaConfirmedCases <- IndiaConfirmedCases %>%
mutate(TotalPercentIncrease = c(NA, -diff(IndiaConfirmedCases$Total.confirmed.cases..cases.) / TotalConfirmedCases[-1] * 100))
IndiaConfirmedCases <- IndiaConfirmedCases %>%
mutate(TotalPercentIncrease = c(NA, -diff(IndiaConfirmedCases$Total.confirmed.cases..cases.) / IndiaConfirmedCases$Total.confirmed.cases..cases.[-1] * 100))
IndiaConfirmedCases <- IndiaConfirmedCases %>%
mutate(DailyPercentIncrease = c(NA, -diff(IndiaConfirmedCases$Daily.new.confirmed.cases..cases.) / IndiaConfirmedCases$Daily.new.confirmed.cases..cases.[-1] * 100))
ft <- flextable(tail(IndiaConfirmedCases, 15))
ft <- autofit(ft)
print(ft, preview = "pptx")
USConfirmedCases <- filter(confirmed_cases, Code == 'USA')
USConfirmedCases <- USConfirmedCases %>%
USConfirmedCases <- USConfirmedCases %>%
mutate(TotalPercentIncrease = c(NA, -diff(USConfirmedCases$Total.confirmed.cases..cases.) / USConfirmedCases$Total.confirmed.cases..cases.[-1] * 100))
USConfirmedCases <- USConfirmedCases %>%
mutate(TotalPercentIncrease = c(NA, -diff(USConfirmedCases$Total.confirmed.cases..cases.) / USConfirmedCases$Total.confirmed.cases..cases.[-1] * 100))
USConfirmedCases <- USConfirmedCases %>%
mutate(DailyPercentIncrease = c(NA, -diff(USConfirmedCases$Daily.new.confirmed.cases..cases.) / USConfirmedCases$Daily.new.confirmed.cases..cases.[-1] * 100))
ft2 <- flextable(tail(USConfirmedCases, 15))
ft2 <- autofit(ft2)
print(ft2, preview = "pptx")
CHNConfirmedCases <- filter(confirmed_cases, Code == 'CHN')
CHNConfirmedCases <- CHNConfirmedCases %>%
mutate(TotalPercentIncrease = c(NA, -diff(CHNConfirmedCases$Total.confirmed.cases..cases.) / CHNConfirmedCases$Total.confirmed.cases..cases.[-1] * 100))
CHNConfirmedCases <- CHNConfirmedCases %>%
mutate(DailyPercentIncrease = c(NA, -diff(CHNConfirmedCases$Daily.new.confirmed.cases..cases.) / CHNConfirmedCases$Daily.new.confirmed.cases..cases.[-1] * 100))
ft3 <- flextable(tail(CHNConfirmedCases, 15))
ft3 <- autofit(ft3)
print(ft3, preview = "pptx")
ESPConfirmedCases <- filter(confirmed_cases, Code == 'ESP')
ESPConfirmedCases <- filter(confirmed_cases, Code == 'ESP')
ESPConfirmedCases <- ESPConfirmedCases %>%
mutate(TotalPercentIncrease = c(NA, -diff(ESPConfirmedCases$Total.confirmed.cases..cases.) / ESPConfirmedCases$Total.confirmed.cases..cases.[-1] * 100))
ESPConfirmedCases <- ESPConfirmedCases %>%
mutate(DailyPercentIncrease = c(NA, -diff(ESPConfirmedCases$Daily.new.confirmed.cases..cases.) / ESPConfirmedCases$Daily.new.confirmed.cases..cases.[-1] * 100))
ft5 <- flextable(tail(ESPConfirmedCases, 15))
ft5 <- autofit(ft5)
print(ft5, preview = "pptx")
FRAConfirmedCases <- filter(confirmed_cases, Code == 'FRA')
FRAConfirmedCases <- filter(confirmed_cases, Code == 'FRA')
FRAConfirmedCases <- FRAConfirmedCases %>%
mutate(TotalPercentIncrease = c(NA, -diff(FRAConfirmedCases$Total.confirmed.cases..cases.) / FRAConfirmedCases$Total.confirmed.cases..cases.[-1] * 100))
FRAConfirmedCases <- FRAConfirmedCases %>%
mutate(DailyPercentIncrease = c(NA, -diff(FRAConfirmedCases$Daily.new.confirmed.cases..cases.) / FRAConfirmedCases$Daily.new.confirmed.cases..cases.[-1] * 100))
ft6 <- flextable(tail(FRAConfirmedCases, 15))
ft6 <- autofit(ft6)
print(ft6, preview = "pptx")
ITAConfirmedCases <- filter(confirmed_cases, Code == 'ITA')
ITAConfirmedCases <- filter(confirmed_cases, Code == 'ITA')
ITAConfirmedCases <- ITAConfirmedCases %>%
mutate(TotalPercentIncrease = c(NA, -diff(ITAConfirmedCases$Total.confirmed.cases..cases.) / ITAConfirmedCases$Total.confirmed.cases..cases.[-1] * 100))
ITAConfirmedCases <- ITAConfirmedCases %>%
mutate(DailyPercentIncrease = c(NA, -diff(ITAConfirmedCases$Daily.new.confirmed.cases..cases.) / ITAConfirmedCases$Daily.new.confirmed.cases..cases.[-1] * 100))
ft7 <- flextable(tail(ITAConfirmedCases, 15))
ft7 <- autofit(ft7)
print(ft7, preview = "pptx")
